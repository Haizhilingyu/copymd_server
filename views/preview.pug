extends layout

block content
    //- link(rel='stylesheet' href='/stylesheets/default-theme.css')
    div(class="lg:mx-20")
        my-component
            | !{content}
    // 使用 Flex 布局将内容垂直居中，并设置宽度和高度
    div(class="flex justify-end items-center fixed bottom-20 right-0 w-100 h-16 p-4")
        <button id="redirectButton">
            <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512"><!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d="M362.7 19.3L314.3 67.7 444.3 197.7l48.4-48.4c25-25 25-65.5 0-90.5L453.3 19.3c-25-25-65.5-25-90.5 0zm-71 71L58.6 323.5c-10.4 10.4-18 23.3-22.2 37.4L1 481.2C-1.5 489.7 .8 498.8 7 505s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L421.7 220.3 291.7 90.3z"/></svg>
        </button>
        // 添加用于展示倒计时的元素
        div(id="countdown", class="p-2 rounded")

    script.
        // 创建自定义元素 MyComponent
        class MyComponent extends HTMLElement {
            constructor() {
                super();

                // 创建 Shadow DOM
                this.shadow = this.attachShadow({ mode: 'open' });

                // 获取父元素传递的 HTML 内容
                const htmlContent = this.innerHTML;

                // 将 HTML 内容插入到 Shadow DOM 中
                this.shadow.innerHTML = htmlContent;

                // 创建 <link> 元素，并设置属性
                const link = document.createElement('link');
                link.rel = 'stylesheet';
                link.href = '/stylesheets/default-theme.css';

                // 将 <link> 元素添加到 Shadow DOM 中
                this.shadow.appendChild(link);
            }
        }

        // 定义自定义元素
        customElements.define('my-component', MyComponent);

        // 获取从 Pug 模板传递的 expiration 参数
        const expirationTime = #{expiration};

        // 更新倒计时显示
        const countdownElement = document.getElementById('countdown');

        const updateCountdown = () => {
            const currentTime = Date.now();
            const remainingTime = expirationTime - currentTime;

            // 如果倒计时结束，则显示提示信息
            if (remainingTime <= 0) {
                countdownElement.textContent = 'Destroyed';
            } else {
                // 将剩余时间格式化为分钟和秒数
                const minutes = Math.floor(remainingTime / 1000 / 60);
                const seconds = Math.floor((remainingTime / 1000) % 60);

                // 更新倒计时显示
                countdownElement.textContent = `Destroy Countdown: ${minutes}:${seconds}`;

                // 每秒更新一次倒计时
                setTimeout(updateCountdown, 1000);
            }
        };

        updateCountdown();
        // 获取当前 URL 地址
        var currentUrl = window.location.href;
        var url = currentUrl.split('/').pop();

        // 获取跳转按钮元素
        var redirectButton = document.getElementById('redirectButton');

        // 监听按钮的点击事件
        redirectButton.addEventListener('click', function() {
            // 构建新的 URL 地址，将当前 URL 作为参数传递给首页
            var newUrl = '/?url=' + encodeURIComponent(url);

            // 跳转到首页
            window.location.href = newUrl;
        });