extends layout

block content
    <script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.11/clipboard.min.js"></script>
    div(class="mt-20 lg:mx-20")
        my-component
            | !{content}
    // 使用 Flex 布局将内容垂直居中，并设置宽度和高度
    div(class="flex justify-end gap-x-2 items-center fixed top-2 right-0 w-100 h-16 p-4")
        button(onclick="exportHtml()" class="flex gap-x-1 h-9 items-center border p-1 rounded-md ") 
            <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512"><!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d="M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V274.7l-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7V32zM64 352c-35.3 0-64 28.7-64 64v32c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V416c0-35.3-28.7-64-64-64H346.5l-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352H64zm368 56a24 24 0 1 1 0 48 24 24 0 1 1 0-48z"/></svg>
        button(id="copyMarkdown" data-clipboard-text=markdown class="flex gap-x-1 h-9 items-center border p-1 rounded-md")
            <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512"><!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d="M448 384H256c-35.3 0-64-28.7-64-64V64c0-35.3 28.7-64 64-64H396.1c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9V320c0 35.3-28.7 64-64 64zM64 128h96v48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16H256c8.8 0 16-7.2 16-16V416h48v32c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V192c0-35.3 28.7-64 64-64z"/></svg>

        button(id="redirectButton" class="flex gap-x-1 h-9 items-center border p-1 rounded-md")
            <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512"><!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d="M362.7 19.3L314.3 67.7 444.3 197.7l48.4-48.4c25-25 25-65.5 0-90.5L453.3 19.3c-25-25-65.5-25-90.5 0zm-71 71L58.6 323.5c-10.4 10.4-18 23.3-22.2 37.4L1 481.2C-1.5 489.7 .8 498.8 7 505s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L421.7 220.3 291.7 90.3z"/></svg>
        // 添加用于展示倒计时的元素
        div(id="countdown" class="p-2 rounded w-56")
    div(class="absolute flex items-center gap-x-2 justify-center z-10 border top-20 right-5 px-4 py-2 rounded hidden" id="copyTip")
        <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512"><!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z"/></svg>
        p Markdown text copied!


    script.
        function exportHtml() {
            const href = window.location.origin;
            fetch('/stylesheets/default-theme.css', {
                method: 'GET',
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const html = `<!DOCTYPE html><html><head><title>Copy Markdown</title><meta name="viewport" content="width=device-width"><style>${data+'body { max-width: 1024px;margin: auto;padding: 10px;}'}</style></head><body>!{content}</body></html>`;
                const blob = new Blob([html], {type: 'text/html'});

                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = '页面标题.html'; 
                a.click();

                URL.revokeObjectURL(url);
            })
            .catch(error => {
                console.log(error);
            });
        }
        var clipboard = new ClipboardJS('#copyMarkdown');

        clipboard.on('success', function(e) {
            showModal();

            e.clearSelection();
        });

        clipboard.on('error', function(e) {
            console.error('Action:', e.action);
            console.error('Trigger:', e.trigger);
        });

        // 创建自定义元素 MyComponent
        class MyComponent extends HTMLElement {
            constructor() {
                super();

                // 创建 Shadow DOM
                this.shadow = this.attachShadow({ mode: 'open' });

                // 获取父元素传递的 HTML 内容
                const htmlContent = this.innerHTML;

                // 将 HTML 内容插入到 Shadow DOM 中
                this.shadow.innerHTML = htmlContent;

                // 创建 <link> 元素，并设置属性
                const link = document.createElement('link');
                link.rel = 'stylesheet';
                link.href = '/stylesheets/default-theme.css';

                // 将 <link> 元素添加到 Shadow DOM 中
                this.shadow.appendChild(link);
            }
        }

        // 定义自定义元素
        customElements.define('my-component', MyComponent);

        // 获取从 Pug 模板传递的 expiration 参数
        const expirationTime = #{expiration};

        // 更新倒计时显示
        const countdownElement = document.getElementById('countdown');

        const updateCountdown = () => {
            const currentTime = Date.now();
            const remainingTime = expirationTime - currentTime;

            // 如果倒计时结束，则显示提示信息
            if (remainingTime <= 0) {
                countdownElement.textContent = 'Destroyed';
            } else {
                // 将剩余时间格式化为分钟和秒数
                const minutes = Math.floor(remainingTime / 1000 / 60);
                const seconds = Math.floor((remainingTime / 1000) % 60);

                // 更新倒计时显示
                countdownElement.textContent = `Destroy Countdown: ${fixZeroStart(minutes+"",2)}:${fixZeroStart(seconds+"",2)}`;

                // 每秒更新一次倒计时
                setTimeout(updateCountdown, 1000);
            }
        };

        function fixZeroStart(str, n) {
            return (Array(n).join(0) + str).slice(-n);
        }

        updateCountdown();
        // 获取当前 URL 地址
        var currentUrl = window.location.href;
        var url = currentUrl.split('/').pop();

        // 获取跳转按钮元素
        var redirectButton = document.getElementById('redirectButton');

        // 监听按钮的点击事件
        redirectButton.addEventListener('click', function() {
            // 构建新的 URL 地址，将当前 URL 作为参数传递给首页
            var newUrl = '/?url=' + encodeURIComponent(url);

            // 跳转到首页
            window.location.href = newUrl;
        });

        function showModal() {
            document.getElementById('copyTip').classList.remove('hidden');
            // 显示模态框
            setTimeout(function() {
                document.getElementById('copyTip').classList.add('hidden');
                // 隐藏模态框
            }, 3000); // 3秒后执行匿名函数
        }