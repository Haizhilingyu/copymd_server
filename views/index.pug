extends layout

block content
  div(class="p-4 font-sans md:text-lg md:mt-10") Sync notes across devices with this Markdown text sharing tool. Send messages from any browser - phone, tablet, laptop. Support custom access URLs and password changes. Each custom page only exists for 20 minutes. Password must be entered to modify the page. After the page is modified, the survival time of 20 minutes will be restored. Try it out for effortless syncing on the go!❤️
  // 添加文本编辑框
  div.p-4
    textarea.border.rounded.p-2.mb-2.w-full(style='height: calc(100vh - 24rem);' placeholder='Please enter the markdown text.' id='markdown', required)
    p.text-red-500.hidden#markdown-error Markdown cannot be empty.

  div.px-4(class="flex flex-col gap-4 lg:h-16 lg:items-center lg:justify-end lg:flex-row")
    input.border.rounded.p-2(class="lg:w-200",placeholder='Access address.' id='url', required)
    p.text-red-500.hidden.p-2#url-error(class="lg:w-200") URL cannot be empty.

    input.border.rounded.p-2(class="lg:w-200",placeholder='Modified password.' id='password', required)
    p.text-red-500.hidden.p-2#password-error(class="lg:w-200") Password cannot be empty.
    
    div(class="flex items-center")
      input.border.rounded.p-2(type="checkbox",checked,class="lg:w-200",placeholder='Modified password.' id='isPrivate', required)
      label(for="isPrivate", class="ml-2") Private Access
    button.bg-blue-500.text-white.px-4.py-2.rounded(class="lg:w-200",onclick='submit()') submit


  script.
    // 获取文本框内容并处理
    const markdownElement = document.getElementById('markdown');
    const urlElement = document.getElementById('url');
    const passwordElement = document.getElementById('password');
    const isPrivateElement = document.getElementById('isPrivate');
    function generateRandomString(length) {
      const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';
      let result = '';

      for (let i = 0; i < length; i++) {
        const randomIndex = Math.floor(Math.random() * characters.length);
        result += characters[randomIndex];
      }

      return result;
    }

    function shuffleString(str) {
      const arr = str.split('');
      for (let i = arr.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [arr[i], arr[j]] = [arr[j], arr[i]];
      }
      return arr.join('');
    }
    function init(){
        const md = `#{markdown}`;
        const url = `#{url}`;
        const isPrivate = #{isPrivate};
        if(md!=null&&md.length>0){
            markdownElement.value = md;
            urlElement.value = url;
            isPrivateElement.checked = isPrivate;
        }else{
            const randomString = generateRandomString(4);
            const shuffledString = shuffleString(randomString);
            urlElement.value = shuffledString;
            passwordElement.value = shuffledString;
        }
    }
    init();
    function submit() {
      

      // 隐藏错误提示
      document.getElementById('markdown-error').classList.add('hidden');
      document.getElementById('url-error').classList.add('hidden');
      document.getElementById('password-error').classList.add('hidden');

      // 非空校验
      if (!markdownElement.value) {
        document.getElementById('markdown-error').classList.remove('hidden');
        return;
      }
      if (!urlElement.value) {
        document.getElementById('url-error').classList.remove('hidden');
        return;
      }
      if (!passwordElement.value) {
        document.getElementById('password-error').classList.remove('hidden');
        document.getElementById('password-error').innerHTML = 'Password cannot be empty.'
        return;
      }

      fetch('/url', {
        method: 'POST',
        body: JSON.stringify({
          "markdown":markdownElement.value,
          "url":urlElement.value,
          "isPrivate":isPrivateElement.checked,
          "password":passwordElement.value})
      })
        .then(response => {
          if (response.ok) {
            // 请求成功，处理响应数据
            return response.json();
          } else {
            // 请求失败，获取错误信息
            return response.text().then(errorMessage => {
              throw new Error(errorMessage);
            });
          }
        })
        .then(data => {
          console.log(data);
          window.location.href = '/' + data.data.url;
        })
        .catch(error => {
          console.log(error);
          document.getElementById('password-error').classList.remove('hidden');
          document.getElementById('password-error').innerHTML = error.message
          // 显示错误信息
          //- alert('Error：' + error.message);
        });
    }  
